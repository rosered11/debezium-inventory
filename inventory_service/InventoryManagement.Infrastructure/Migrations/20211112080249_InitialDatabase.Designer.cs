// <auto-generated />
using System;
using InventoryManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InventoryManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211112080249_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("InventoryManagement.Infrastructure.Entities.Inventory", b =>
                {
                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseLocationNo")
                        .HasColumnType("text");

                    b.Property<int>("AvailableQty")
                        .HasColumnType("integer");

                    b.Property<int>("BalanceQty")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("POQty")
                        .HasColumnType("integer");

                    b.Property<int>("ReceivingQty")
                        .HasColumnType("integer");

                    b.Property<int>("RequestQty")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserCreated")
                        .HasColumnType("text");

                    b.Property<string>("UserIdCreated")
                        .HasColumnType("text");

                    b.Property<string>("UserIdUpdated")
                        .HasColumnType("text");

                    b.Property<string>("UserUpdated")
                        .HasColumnType("text");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("PartNo", "WarehouseLocationNo")
                        .HasName("PrimaryKey_PartNoAndWarehouseLocationNo");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("InventoryManagement.Infrastructure.Entities.OutboxEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasColumnName("aggregateid");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasColumnName("aggregatetype");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("payload");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("OutboxEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
